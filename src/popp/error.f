      SUBROUTINE ERROR(I,IERR,A,B,C)
      COMMON/PAR/VMIN,VMAX,NMIN,ITMAX,IEF
C
      INTEGER I,IA,IB,IC,IEF,IERR,IR,ITMAX,NMIN
      REAL A,B,C,VMAX,VMIN
      LOGICAL FIRST
C
      INTEGER UNIT
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C          THIS SUBROUTINE DOES THE FOLLOWING:
C       -OUTPUTS AN APPROPRIATE ERROR MESSAGE FOR ANY ERROR
C         DETECTED IN ANY OF THE SUBROUTINES OF NMODES
C
C       INPUT VARIABLES:
C         I,A,B,C
C
C       OUTPUT VARIABLES:
C         IERR
C         ALSO ERROR MESSAGES SENT TO OUTPUT UNIT IEF
C         IF IEF IS 3 (LPT:) A COPY OF THE ERROR MESSAGE IS ALSO SENT
C         TO UNIT NUMBER 5 (TTY:)
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C
C       FIND THE APPROPRIATE ERROR CODE
C       MAKE INPUT PARAMETERS INTEGERS AS NECESSARY
C       OUTPUT A PROPER ERROR OR WARNING MESSAGE
C
      FIRST=.TRUE.
      UNIT=IEF
C
      GO TO (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,
     223,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43)
     2I
  1   IA=IFIX(A+SIGN(0.01,A))
      IB=IFIX(B+SIGN(0.01,B))
      WRITE(UNIT,4000)
      WRITE(UNIT,101)IA,IB
      GO TO 950
  2   IA=IFIX(A+SIGN(0.01,A))
      IB=IFIX(B+SIGN(0.01,B))
      WRITE(UNIT,4000)
      WRITE(UNIT,102)IA,IB
      GO TO 950
  3   IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,1000)
      WRITE(UNIT,103)IA,B,C
      GO TO 900
  4   IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,1000)
      WRITE(UNIT,104)IA,B,C
      GO TO 900
  5   IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,1000)
      WRITE(UNIT,105)IA,B,C
      GO TO 900
  6   WRITE(UNIT,1000)
      WRITE(UNIT,106)A,B
      GO TO 900
  7   WRITE(UNIT,1000)
      WRITE(UNIT,107)A
      GO TO 900
  8   IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,1000)
      WRITE(UNIT,108)IA,B
      GO TO 900
  9   IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,1000)
      WRITE(UNIT,109)IA,B
      GO TO 900
  10  IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,1000)
      WRITE(UNIT,110)IA,B
      GO TO 900
  11  IA=IFIX(A+SIGN(0.01,A))
      IF (B.LT.0.)  GO TO 911
      WRITE (UNIT,2000)
      WRITE (UNIT,9111) IA,B
      GO TO 950
 911  WRITE(UNIT,1000)
      WRITE(UNIT,111)IA,B
      GO TO 900
  12  IA=IFIX(A+SIGN(0.01,A))
      IF (B.LT.0.)  GO TO 912
      WRITE (UNIT,2000)
      WRITE (UNIT,9112) IA,B
      GO TO 950
 912  WRITE(UNIT,1000)
      WRITE(UNIT,112)IA,B
      GO TO 900
  13  IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,1000)
      WRITE(UNIT,113)IA
      GO TO 900
  14  IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,2000)
      WRITE(UNIT,114)IA,B
      GO TO 950
  15  IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,2000)
      WRITE(UNIT,115)IA,B
      GO TO 950
  16  WRITE(UNIT,2000)
      WRITE(UNIT,116)A
      GO TO 950
  17  WRITE(UNIT,2000)
      WRITE(UNIT,117)A
      GO TO 950
  18  WRITE(UNIT,2000)
      WRITE(UNIT,118)A,B
      GO TO 950
  19  IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,1000)
      WRITE(UNIT,119)IA
      GO TO 900
  20  WRITE(UNIT,1000)
      WRITE(UNIT,120)A
      GO TO 900
  21  IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,1000)
      WRITE(UNIT,121)IA
      GO TO 900
  22  IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,1000)
      WRITE(UNIT,122)IA
      GO TO 900
  23  IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,1000)
      WRITE(UNIT,123)IA
      GO TO 900
  24  WRITE(UNIT,3000)
      WRITE(UNIT,124)A,B
      GO TO 900
  25  IA=IFIX(A+SIGN(0.01,A))
      IB=IFIX(B+SIGN(0.01,B))
      WRITE(UNIT,3000)
      WRITE(UNIT,125)IA,IB
      GO TO 900
  26  IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,3000)
      IF(IA.EQ.-1)WRITE(UNIT,226)
      IF(IA.EQ.-2)WRITE(UNIT,326)
      IF(IA.GT.0)WRITE(UNIT,126)IA
      GO TO 900
  27  IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,3000)
      IF(IA.EQ.-1)WRITE(UNIT,227)
      IF(IA.EQ.-2)WRITE(UNIT,327)
      IF(IA.GT.0)WRITE(UNIT,127)IA
      GO TO 900
  28  IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,3000)
      IF(IA.EQ.-1)WRITE(UNIT,228)
      IF(IA.EQ.-2)WRITE(UNIT,328)
      IF(IA.GT.0)WRITE(UNIT,128)IA
      GO TO 900
  29  IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,3000)
      IF(IA.EQ.-1)WRITE(UNIT,229)
      IF(IA.EQ.-2)WRITE(UNIT,329)
      IF(IA.GT.0)WRITE(UNIT,129)IA
      GO TO 900
  30  IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,1000)
      WRITE(UNIT,130)IA
      GO TO 900
  31  WRITE(UNIT,1000)
      WRITE(UNIT,131)A
      GO TO 900
  32  IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,1000)
      WRITE(UNIT,132)IA
      GO TO 900
  33  IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,1000)
      WRITE(UNIT,133)IA,B
      GO TO 900
  34  IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,1000)
      WRITE(UNIT,134)IA
      GO TO 900
  35  IA=IFIX(A+SIGN(0.01,A))
      IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,1000)
      WRITE(UNIT,135)IA
      GO TO 900
  36  IA=IFIX(A+SIGN(0.01,A))
      IB=IFIX(B+SIGN(0.01,B))
      WRITE(UNIT,1000)
      WRITE(UNIT,136)IA,IB
      GO TO 900
  37  IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,1000)
      WRITE(UNIT,137)IA
      GO TO 900
  38  WRITE(UNIT,1000)
      WRITE(UNIT,138)
      GO TO 900
  39  WRITE(UNIT,1000)
      WRITE(UNIT,139)A
      GO TO 900
  40  WRITE(UNIT,1000)
      WRITE(UNIT,140)A
      GO TO 900
  41  IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,1000)
      WRITE(UNIT,141)IA
      GO TO 900
  42  IA=IFIX(A+SIGN(0.01,A))
      WRITE(UNIT,2000)
      WRITE(UNIT,142)IA
      GO TO 950
  43  IA=IFIX(A+SIGN(0.01,A))
      IC=IFIX(C+SIGN(0.01,C))
      WRITE(UNIT,3000)
      WRITE(UNIT,143)IA,B,IC
C
C       ASSIGN A NEW VALUE TO THE ERROR FLAG IF NECESSARY
C
  900 IERR=1
      GO TO 999
  950 IR=1
      IF(IERR.NE.1)IR=2
      IERR=IR
  999 IF(.NOT.FIRST.OR.UNIT.NE.3)RETURN
      FIRST=.FALSE.
      UNIT=6
      GO TO (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,
     223,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43)
     2I
C
C       FORMATS FOR ERROR AND WARNING MESSAGE OUTPUTS
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1000         FORMAT(/,'     FATAL ERROR IN INPUT DATA FROM ERROR',
     1' ROUTINE IN MODES :')
 2000         FORMAT(/,'     INPUT DATA WARNING FROM ERROR ROUTINE IN',
     1' MODES:')
 3000         FORMAT(/,'     FATAL ERROR DURING EXECUTION FROM ERROR',
     1' ROUTINE IN MODES :')
 4000 FORMAT(/,'     EXECUTION WARNING FROM ERROR ROUTINE IN MODES :')
  101 FORMAT(' A MAXIMUM OF ',I4,' ITERATIONS WERE SPECIFIED FOR ',
     2/,' THE HALVING PROCESS,THE CONDITIONS FOR SWITCHING TO THE ',
     2/,' SECOND ORDER METHOD WERE NOT MET WITHIN THE ',
     2/,' SPECIFIED NUMBER OF ITERATIONS FOR EIGENVALUE ',I4,' .')
  102 FORMAT(' A MAXIMUM OF ',I4,' ITERATIONS WERE SPECIFIED FOR ',
     2/,' THE SECOND ORDER METHOD , IN  THE PROCESS OF CALCULATING ',
     2/,' EIGENVALUE ',I4,' THE METHOD FAILED TO CONVERGE IN THE ',
     2/,' SPECIFIED NUMBER OF ITERATIONS.')
  103 FORMAT(' ENTRY ',I4,' IN THE INPUT VELOCITY PROFILE IS ',
     2/,' CP=',G16.8,' ZP=',G16.8,' NEGATIVE SOUND VELOCITIES ARE ',
     2/,' NOT PERMITTED.')
  104 FORMAT(' ENTRY ',I4,' IN THE INPUT VELOCITY PROFILE IS ',
     2/,' CP=',G16.8,' ZP=',G16.8,' NEGATIVE DEPTHS ARE ',
     2/,' NOT PERMITTED.')
  105 FORMAT(' THE INPUT VELOCITY PROFILE DEPTH ',I4,' IS ',
     2/,G16.8,' AND THE NEXT ENTRY IS ',G16.8,' THE DEPTHS MUST ',
     2/,' INCREASE.')
  106 FORMAT(' THE LAST DEPTH ENTRY IN THE INPUT VELOCITY PROFILE IS',
     2/,G16.8,' WHEREAS THE DEPTH OF THE WATER COLUMN IS ENTERED AS',
     2/,G16.8,' THE DEPTH OF THE WATER COLUMN MUST BE AT LEAST',
     2/,' AS LARGE.')
  107 FORMAT(' THE FREQUENCY ENTERED IS ',G16.8,' NEGATIVE ',
     2/,' FREQUENCIES ARE NOT ALLOWED.')
  108         FORMAT(' THE BOTTOM LAYER ',I4,' WAS ASSIGNED A HEIGHT OF',
     2/,G16.8,' NEGATIVE OR ZERO HEIGHTS ARE NOT PERMITTED.')
  109 FORMAT(' THE BOTTOM LAYER ',I4,' WAS ASSIGNED A SOUND SPEED OF',
     2/,G16.8,' NEGATIVE OR ZERO SOUND SPEEDS ARE NOT PERMITTED.')
  110 FORMAT(' THE BOTTOM LAYER ',I4,' WAS ASSIGNED A DENSITY OF ',
     2/,G16.8,' NEGATIVE OR ZERO DENSITIES ARE NOT PERMITTED.')
  111 FORMAT(' THE SOURCE DEPTH ',I4,' WAS ENTERED AS ',G16.8,
     2/,' NEGATIVE SOURCE DEPTHS ARE NOT PERMITTED.')
 9111 FORMAT(' THE SOURCE DEPTH ',I4,' WAS ENTERED AS ',G16.8)
  112 FORMAT(' THE RECEIVER DEPTH ',I4,' WAS ENTERED AS ',G16.8,
     2/,' NEGATIVE RECEIVER DEPTHS ARE NOT PERMITTED.')
 9112 FORMAT(' THE RECEIVER DEPTH ',I4,' WAS ENTERED AS ',G16.8)
  113 FORMAT(' THE NUMBER OF NORMAL MODES REQUESTED IS ',I4,
     2/,' A NEGATIVE NUMBER OF MODES IS NOT ALLOWED.')
  114 FORMAT(' THE RECEIVER ',I4,' HAS A DEPTH OF ',G16.8,
     2/,' THIS RECEIVER IS IN THE BOTTOM LAYERS.')
  115 FORMAT(' THE SOURCE ',I3,' HAS A DEPTH OF ',G16.8,
     2/,' THIS SOURCE IS IN THE BOTTOM LAYERS.')
  116 FORMAT(' THE MINIMUM PHASE VELOCITY IS ',G16.8,
     2/,' A NEGATIVE PHASE VELOCITY IS NOT ACCEPTABLE',
     2/,' THE DEFAULT VALUE WAS USED.')
  117 FORMAT(' THE MAXIMUM PHASE VELOCITY IS ',G16.8,
     2/,' A NEGATIVE PHASE VELOCITY IS NOT ACCEPTABLE',
     2/,' THE DEFAULT VALUE WAS USED.')
  118 FORMAT(' THE MAXIMUM PHASE VELOCITY IS ',G16.8,' WHEREAS',
     2/,' THE MINIMUM PHASE VELOCITY IS ',G16.8,' THE MINIMUM',
     2/,' PHASE VELOCITY MUST BE LESS THAN THE MAXIMUM ',
     2/,' PHASE VELOCITY, THE DEFAULT VALUES WERE USED.')
  119 FORMAT(' THE NUMBER OF THE MINIMUM MODE REQUIRED IS ',I4,
     2/,' THIS VALUE MUST BE GREATER THAN ZERO.')
  120 FORMAT(' THE TOLERANCE ON THE EIGENVALUES WAS SPECIFIED AS',
     2/,G16.8,' THIS VALUE MUST BE GREATER THAN ZERO.')
  121 FORMAT(' THE MAXIMUM NUMBER OF ITERATIONS PER MODE WAS ',
     2/,' SPECIFIED AS ',I4,' THIS VALUE MUST BE GREATER THAN ZERO.')
  122 FORMAT(' THE PLOTTING OPTION WAS SPECIFIED AS THE VALUE ',I4,
     2/,' THIS VALUE MUST BE GREATER OR EQUAL ZERO.')
  123 FORMAT(' THE PRINTING OPTION WAS SPECIFIED AS THE VALUE ',I4,
     2/,' THIS VALUE MUST BE ZERO OR ONE.')
  124 FORMAT(' THE VALUE OF CMAX WAS CALCULATED AS ',G16.8,
     2/,' WHILE THE VALUE OF CMIN WAS FOUND TO BE ',G16.8,
     2/,' FOR EIGENVALUES TO EXIST CMAX MUST BE LESS THAN CMIN.')
  125 FORMAT(' THE NUMBER OF THE LARGEST EIGENFUNCTION REQUIRED IS',
     2/,I4,' THE NUMBER OF THE LOWEST EIGENFUNCTION REQUIRED IS',
     2/,I4,' THE LOWEST VALUE MUST BE LESS THAN THE LARGEST VALUE.')
  126 FORMAT(' DURING THE CALCULATION OF EIGENVALUE ',I4,' THE UPPER',
     2/,' TURNING POINT WAS NOT FOUND.')
  127 FORMAT(' DURING THE CALCULATION OF EIGENVALUE ',I4,' THE LOWER',
     2/,' TURNING POINT WAS NOT FOUND.')
  128 FORMAT(' IN THE CALCULATION OF EIGENVALUE ',I4,' A TRIAL',
     2/,' EIGENVALUE Q WAS LESS THAN THE MINIMUM SOUND SPEED',
     2/,' AND THUS OUT OF RANGE.')
  129 FORMAT(' IN THE CALCULATION OF EIGENVALUE ',I4,' A TRIAL',
     2/,' EIGENVALUE Q WAS GREATER THAN THE MAXIMUM SOUND SPEED',
     2/,' AND THUS OUT OF RANGE.')
  130 FORMAT(' THE NUMBER OF WATER LAYERS WAS SPECIFIED AS ',I4,
     2/,' THIS VALUE MUST BE AT LEAST ONE.')
  131 FORMAT(' THE DENSITY OF THE WATER IN THE WATER COLUMN WAS ',
     2/,' ENTERED AS ',G16.8,' THIS VALUE MUST BE GREATER ',
     2/,' THAN ZERO.')
  132 FORMAT(' THE NUMBER OF BOTTOM LAYERS WAS SPECIFIED AS ',
     2/,I4,' THIS VALUE MUST BE AT LEAST ONE.')
  133 FORMAT(' ENTRY ',I4,' IN THE ATTENUATION ARRAY IS ',G16.8,
     2/,' THIS VALUE MUST BE GREATER THAN OR EQUAL ZERO.')
  134 FORMAT(' THE NUMBER OF SOURCES SPECIFIED IS ',I4,
     2/,' THIS VALUE MUST BE GREATER THAN  ZERO.')
  135 FORMAT(' THE NUMBER OF RECEIVERS SPECIFIED IS ',I4,
     2/,' THIS VALUE MUST BE GREATER THAN ZERO.')
  136 FORMAT(' THE SPECIFIED NUMBER OF LAYERS IS ',I4,' WHEREAS',
     2/,' THE SPECIFIED NUMBER OF BOTTOM LAYERS IS ',I4,
     2/,' NL MUST BE GREATER THAN NBL.')
  137 FORMAT(' THE NUMBER OF SOURCE AND RECEIVER DEPTHS IS GIVEN AS',
     2/,I4,' BUT THIS IS NOT EQUAL TO THE NUMBER OF SOURCES PLUS',
     2/,' THE NUMBER OF RECEIVERS.')
  138 FORMAT(' THE NUMBER OF SOURCES AND THE NUMBER OF RECIERVERS',
     2/,' WERE BOTH SPECIFIED AS ZERO.')
  139 FORMAT(' THE TOLERANCE ON THE EIGENFUNCTION AT THE MATCHING',
     2/,' RADIUS (TOLU) WAS SPECIFIED AS ',G16.8,' THIS VALUE',
     2/,' MUST BE GREATER THAN ZERO.')
  140 FORMAT(' THE TOLERANCE ON GAMMA (TOLGAM) WAS SPECIFIED AS ',
     2/,G16.8,' THIS VALUE MUST BE GREATER THAN ZERO.')
  141 FORMAT(' THE DEVICE TO WHICH ERROR MESSAGES WILL BE DIRECTED',
     2/,' WAS SPECIFIED AS ',I4,' THIS NUMBER DOES NOT ',
     2/,' CORRESPOND TO AN OUTPUT DEVICE.')
  142 FORMAT(' THE DEVICE TO WHICH ERROR MESSAGES WILL BE DIRECTED',
     2/,' WAS SPECIFIED AS ',I4,' THIS NUMBER DOES NOT NECESSARILY',
     2/,' CORRESPOND TO AN OUTPUT DEVICE.')
  143 FORMAT(' DURING THE FIRST ITERATION ON EIGENVALUE ',I4,' THE',
     2/,' LOWER BOUND (Q1) ON THE TRIAL EIGENVALUE Q WAS SET AS',
     2/,G16.8,' BUT THE NUMBER OF ZERO CROSSINGS AT Q1 IS ',I4,
     2/,' THIS EIGENVALUE CANNOT BE CALCULATED IN THIS CASE EITHER',
     2/,' BECAUSE THE NUMBER OF ZERO CROSSINGS IS TOO SMALL OR',
     2/,' BECAUSE THE NUMBER OF ZERO CROSSINGS IS CORRECT AND DELQ',
     2/,' IS NEGATIVE.')
  226 FORMAT(' WHEN CALCULATING THE NUMBER OF ZERO CROSSINGS FOR',
     2/,' Q1 IN NMODES THE UPPER TURNING POINT WAS NOT FOUND.')
  227 FORMAT(' WHEN CALCULATING THE NUMBER OF ZERO CROSSINGS FOR',
     2/,' Q1 IN NMODES THE LOWER TURNING POINT WAS NOT FOUND.')
  228 FORMAT(' WHEN CALCULATING THE NUMBER OF ZERO CROSSINGS FOR',
     2/,' Q1 IN NMODES IT WAS FOUND THAT Q1 WAS LESS THAN THE',
     2/,' MINIMUM ALLOWABLE SOUND SPEED.')
  229 FORMAT(' WHEN CALCULATING THE NUMBER OF ZERO CROSSINGS FOR',
     2/,' Q1 IN NMODES IT WAS FOUND THAT Q1 WAS GREATER THAN THE',
     2/,' MAXIMUM ALLOWABLE SOUND SPEED.')
  326 FORMAT(' WHEN CALCULATING THE DO-LOOP PARAMETERS IN DOPAR',
     2/,' ONE OF THE TURNING POINTS COULD NOT BE FOUND.')
  327 FORMAT(' WHEN CALCULATING THE DO-LOOP PARAMETERS IN DOPAR',
     2/,' ONE OF THE TURNING POINTS COULD NOT BE FOUND.')
  328 FORMAT(' WHEN CALCULATING THE DO-LOOP PARAMETERS IN DOPAR'
     2/,' ONE OF THE EIGENVALUES TO BE CONSIDERED WAS OUT OF RANGE.')
  329 FORMAT(' WHEN CALCULATING THE DO-LOOP PARAMETERS IN DOPAR',
     2/,' ONE OF THE EIGENVALUES TO BE CONSIDERED WAS OUT OF RANGE.')
      END
