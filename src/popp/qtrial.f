      SUBROUTINE QTRIAL(NZC,I,DELQ,KND,NMODES,NZCQ1,ZA,ZAQ1,ZB,ZBQ1,
     2    Q,Q1,Q2,LOWER,IERR)
C         FLAGS CHANGES BY  DALE D ELLIS  NOV-78
      INTEGER I,LOWER,NMODES,NZC,NZCQ1,IERR
      COMMON/DATA/OMEGA,CMIN,CMAX
      DIMENSION KND(NMODES)
      INTEGER ZA,ZB,ZAQ1,ZBQ1
      DOUBLE PRECISION CMIN,CMAX,Q,Q1,Q2,DELQ,KND,OMEGA
C 
      DOUBLE PRECISION SAFETY
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C          THIS SUBROUTINE DOES THE FOLLOWING:
C       -CALCULATES Q1,Q2,Q
C       -ADJUSTS THE NUMBER OF ZERO CROSSINGS AND THE INTEGRATION POINTS
C         FOR THE EIGENFUNCTION ASSOCIATED WITH Q1 IF Q1 HAS ITS
C         VALUE CHANGED
C
C       INPUT VARIABLES:
C         NZC,I,DELQ,KN(NMODES),NMODES,Q,Q1,Q2,NZCQ1,ZAQ1,ZBQ1,ZA,ZB
C
C       OUTPUT VARIABLES:
C         Q1,Q2,Q,NZCQ1,ZAQ1,ZBQ1
C
C       NOTES:
C         THE NEW TRIAL EIGENVALUE Q IS CALCULATED BY EITHER HALVING
C        THE INTERVAL , LINEAR INTERPOLATION , OR QUADRATIC
C        INTERPOLATION
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       IF THIS IS THE FIRST Q FOR THE EIGENVALUE I , GO TO THE
C        INTERPOLATION ROUTINES
C
C 
      SAFETY = 2.0D0
      IF(NZC.LT.-1)GO TO 200
C
C       IF THE NUMBER OF ZERO CROSSINGS OF THE EIGENFUNCTION IS
C        CORRECT , USE DELQ TO ADJUST Q1,Q2,Q
C
      IF(NZC.EQ.I)GO TO 220
C
C       IF THE NUMBER OF ZERO CROSSINGS IS NOT CORRECT , ADJUST
C        Q1,Q2,Q ACCORDINGLY
C       IF Q1 IS ALTERED ADJUST NZCQ1,ZAQ1,ZBQ1
C
      IF(NZC.GT.I)Q1=Q
      IF(NZC.LT.I)Q2=Q
      IF(Q1.NE.Q)GO TO 50
      NZCQ1=NZC
      ZAQ1=ZA
      ZBQ1=ZB
  50  Q=0.5D0*(Q1+Q2)
      RETURN
C
C       ADJUST Q1,Q2,Q USING THE SIGN OF DELQ AS A GUIDE
C       IF Q1 IS ALTERED ADJUST NZCQ1,ZAQ1,ZBQ1
C
  220 IF(DELQ.GT.0.0D0)Q1=Q
      IF(DELQ.LT.0.0D0)Q2=Q
      IF(Q1.NE.Q)GO TO 60
      NZCQ1=NZC
      ZAQ1=ZA
      ZBQ1=ZB
  60  Q=0.5D0*(Q1+Q2)
      RETURN
C
C       INITIAL TRIAL VALUE OF Q1,Q2,Q FOR EIGENVALUES 1 & 2
C
  200 IF(I.NE.LOWER.AND.I.NE.LOWER+1)GO TO 100
      Q1=CMAX
      Q2=CMIN
C 
      IF (I.EQ. LOWER+1) Q2=KND(1)
C 
      IF (I.EQ. LOWER+1) Q1=KND(1) - (2.0D0/DBLE(FLOAT(I-1))+
     1 1.0D0/DBLE(FLOAT((I-1)**2)) ) * (CMIN-KND(1) ) * SAFETY
      IF (Q1.LT.CMAX)  Q1=CMAX
      Q=0.5D0*(Q1+Q2)
      RETURN
C
C       INTERPOLATE LINEARLY TO GET INITIAL TRIAL VALUE FOR
C        EIGENVALUE 3 , IF THE INTERPOLATED Q IS NOT IN (Q1,Q2)
C        USE THE MIDPOINT OF THIS INTERVAL
C
  100 IF(I.NE.LOWER+2)GO TO 110
      Q=2.0D0*KND(2)-KND(1)
C
      Q1=KND(1)-(2.0D0/DBLE(FLOAT(I-1))+1.0D0/DBLE(FLOAT((I-1)**2)))
     1 *(CMIN-KND(2))  *  SAFETY
      IF(Q1.LT.CMAX)Q1=CMAX
      Q2=KND(2)
      IF(Q.LT.Q1.OR.Q.GT.Q2)Q=0.5D0*(Q1+Q2)
      RETURN
C
C       INTERPOLATE QUADRATICALLY TO GET THE INITIAL TRIAL VALUE
C        FOR ALL SUBSEQUENT EIGENVALUES , IF THE INTERPOLATED Q
C        IS NOT IN (Q1,Q2) USE THE MIDPOINT OF THIS INTERVAL
C
  110 Q=KND(I-LOWER)-3.0D0*KND(I-LOWER-1)+3.0D0*KND(I-LOWER-2)
C
      Q1=KND(I-LOWER)-(1.0D0/DBLE(FLOAT((I-1)**2))+2.0D0/DBLE
     2 (FLOAT(I-1)))  *(CMIN-KND(I-LOWER))  *  SAFETY
      IF(Q1.LT.CMAX)Q1=CMAX
      Q2=KND(I-LOWER+1-1)
      IF(Q.LT.Q1.OR.Q.GT.Q2)Q=0.5D0*(Q1+Q2)
      RETURN
      END
