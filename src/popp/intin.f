      SUBROUTINE INTIN(M,ZI,CI,NL,NPT,Q,ZM,ZB,Z2,RHO,NBL,SUMB,WORK,
     2 SMOUT,DELOUT,NZC,ZMX,SMIN,UIN,UDRIN,UOUT,UDROUT,NZCPV,IERR)
      INTEGER I,ICHS,INC,ISTART,IZX,J,M,NBL,NL,NPT,NZC,NZCPV
      REAL DELIN,DELOUT,GAM,GAM2,SSS,TOLU,XMATCH,ZMX,TOLGAM,TOLK,RHO
      DIMENSION ZI(NL),CI(NL),RHO(0:NBL),WORK(NL,2)
      INTEGER ZM,ZB,Z2,IERR
      DOUBLE PRECISION WORK,GAMMA,GAMMA2,AI,BI,SS,SMIN,A,B,S,C,E,RH,
     2    GSS,RHPREV,UOUT,UDROUT,UIN,UDRIN,SAVE1,SAVE2,ZI,CI,Q,
     2    SUMB,STERM, SMOUT,PI
      COMMON/TOL/TOLK,TOLU,TOLGAM
      PARAMETER (PI=3.1415926535897932384626433832795D0)
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C          THIS SUBROUTINE DOES THE FOLLOWING:
C       -PREFORMS THE INWARDS INTEGRATION , TO DETERMINE THE
C         EIGENFUNCTION & ITS DERIVATIVE FOR THE TRIAL EIGENVALUE
C         Q , FROM THE LOWEST LAYER UP TO THE MATCHING RADIUS
C       -CALCULATES THE INTEGRAL OF THE EIGENFUNCTION SQUARED
C         DIVIDED BY THE DENSITY
C       -COUNTS THE NUMBER OF ZERO CROSSINGS OF THE EIGENFUNCTION
C         FROM THE LOWEST LAYER TO THE MATCHING RADIUS
C       -DETERMINES THE ACTUAL VALUE OF THE MATCHING RADIUS AND
C         CALCULATES THE EIGENFUNCTION & ITS DERIVATIVE FOR
C         BOTH THE INWARDS & OUTWARDS INTEGRATION AT THIS POINT
C
C       INPUT VARIABLES:
C         ZI(NL),CI(NL),NL,Q,ZM,ZB,Z2,RHO(0:NBL),NBL,SUMB,NZC,DELOUT,M
C         NPT,NZCPV
C
C       OUTPUT VARIABLES:
C         WORK(NL,2),SMIN,NZC,UIN,UDRIN,UOUT,UDROUT,ZMX
C
C       NOTES:
C         THE VALUE STORED IN WORK(I,*) IS THE VALUE AT THE TOP
C        OF LAYER I
C         UIN CONTAINS THE VALUE OF THE EIGENFUNCTION AT THE MATCHING
C        RADIUS CALCULATED DURING THE INWARDS INTEGRATION , UOUT
C        CONTAINS THE VALUE CALCULATED DURING THE OUTWARDS INTEGRATION
C         SIMILARILY UDRIN CONTAINS THE VALUE OF THE DERIVATIVE OF
C        THE EIGENFUNCTION AT THE MATCHING RADIUS CALCULATED DURING THE
C        INWARDS INTEGRATION , WHILE UDROUT CONTAINS THE VALUE
C        CALCULATED DURING THE OUTWARDS INTEGRATION
C         THE MATRIX WORK(NL,2) CONTAINS ENTRIES IN THE FIRST ZM PLACES
C        AS CALCULATED IN SUBROUTINE INTOUT , THESE VALUES ARE NOT
C        ALTERED IN THIS SUBROUTINE
C         NZC AS AN INPUT VARIABLE CONTAINS THE NUMBER OF ZERO
C        CROSSINGS OF THE CALCULATED EIGENFUNCTION AS COUNTED
C        DURING THE OUTWARDS INTEGRATION , AS AN OUTPUT VARIABLE
C        OF THIS SUBROUTINE NZC WILL CONTAIN THE NUMBER OF ZERO
C        CROSSINGS OF THE ENTIRE EIGENFUNCTION
C         WE ARE GAURANTEED AN OSCILLATORY SOLUTION IN THE LAYER
C        CONTAINING THE MATCHING RADIUS
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       INITIALIZE SMIN
C       IF THE INTEGRATION STARTS IN THE LOWEST LAYER GO TO 50
C
      SMIN=0.0D0
      IF(ZB.EQ.NL)GO TO 50
C
C       ASSIGN ANY NECESSARY LEADING ZEROS
C
      DO 20 I=ZB+1,NL
      WORK(I,1)=0.0D0
  20  WORK(I,2)=0.0D0
C
C       ASSIGN THE FIRST NON-ZERO ENTRY IN THE EIGENFUNCTION &
C        ITS DERIVATIVE
C       CALCULATE THE CONTRABUTION TO THE INTEGRAL FROM THE
C        DECAYING EXPONENTIAL
C
  50  RH=RHO(0)
      IF(ZB.GT.NPT)RH=RHO(ZB-NPT)
      GAMMA2=CI(ZB)-Q
      IF(DABS(GAMMA2).LT.TOLGAM)GAMMA2=TOLGAM
      GAMMA=DSQRT(DABS(GAMMA2))
      WORK(ZB,1)=DEXP(-SUMB)
      WORK(ZB,2) = -WORK(ZB,1) * GAMMA
      SMIN=SMIN+WORK(ZB,1)*WORK(ZB,1)/2.0D0/GAMMA/RH
C
C       CALCULATE THE EIGENFUNCTION
C
      SAVE1=WORK(ZM,1)
      SAVE2=WORK(ZM,2)
      INC=ZB+ZM-1
      DO 290 J=ZM,ZB-1
      I=INC-J
      GAMMA2=CI(I)-Q
      SS=ZI(I+1)-ZI(I)
      GAMMA=DSQRT(DABS(GAMMA2))
      RHPREV=RHO(0)
      IF(I+1.GT.NPT)RHPREV=RHO(I-NPT+1)
      RH=RHO(0)
      IF(I.GT.NPT)RH=RHO(I-NPT)
C
C       DECIDE IF GAMMA2 IS POSITIVE NEGATIVE OR ZERO , AND BRANCH
C        TO THE APPROPRIATE TYPE OF SOLUTION FOR THE LAYER UNDER
C        CONSIDERATION
C
      IF(GAMMA2.GT.TOLGAM)GO TO 210
      IF(GAMMA2.LT.-TOLGAM)GO TO 230
C
C       USE A LINEAR SOLUTION IN THE LAYER
C       CALCULATE THE CONTRABUTION TO SMIN FOR THE LAYER
C
      AI=WORK(I+1,1)-WORK(I+1,2)*RH/RHPREV*SS
      BI=WORK(I+1,2)*RH/RHPREV
      WORK(I,1)=AI
      WORK(I,2)=BI
      STERM =  (AI*AI*SS+AI*BI*SS*SS+BI*BI*(SS**3)/3.0D0)/RH
      SMIN = SMIN + STERM
      GO TO 290
C
C       USE AN OSCILLATORY SOLUTION IN THE LAYER
C       CALCULATE THE INCREMENT TO SMIN FOR THE LAYER
C
  210 GSS=GAMMA*SS
      C=DCOS(GSS)
      S=DSIN(GSS)
      AI=WORK(I+1,1)*S+WORK(I+1,2)*RH/RHPREV*C/GAMMA
      BI=WORK(I+1,1)*C-WORK(I+1,2)*RH/RHPREV*S/GAMMA
      WORK(I,1)=BI
      WORK(I,2)=AI*GAMMA
      STERM =  SS/2.0D0/RH*((AI*AI+BI*BI)+S*C*(BI*BI-AI*AI)/GSS+
     22.0D0*AI*BI*S*S/GSS)
      SMIN = SMIN + STERM
      GO TO 290
C
C       USE AN EXPONENTIAL SOLUTION IN THE LAYER
C       CALCULATE SMIN IN THE LAYER
C
  230 GSS=GAMMA*SS
      E=DEXP(GSS)
      AI=(WORK(I+1,1)+WORK(I+1,2)*RH/RHPREV/GAMMA)/2.0D0/E
      BI=(WORK(I+1,1)-WORK(I+1,2)*RH/RHPREV/GAMMA)*E/2.0D0
      WORK(I,1)=AI+BI
      WORK(I,2)=GAMMA*(AI-BI)
      STERM =  SS/2.0D0/RH/GSS*(AI*AI*(E*E-1.0D0) +
     2  BI*BI*(1.0D0-1.0D0/E/E) + 4.0D0*AI*BI*GSS)
      SMIN = SMIN + STERM
  290 CONTINUE
      DELIN=SNGL(DATAN2(WORK(ZM,1),WORK(ZM,2)/RH))
      IF (DELIN.LT.0.) DELIN = DELIN + PI
C
C       CALL XMATCH TO DETERMINE ZMX
C
      IF(NZCPV.NE.M)ZMX=XMATCH(DELIN,DELOUT,GAMMA,SS)
      ISTART=ZM
      IF(ZMX.NE.0.0)ISTART=ISTART+1
C
C       ASSIGN VALUES TO UIN,UOUT,UDROUT,UDRIN IF ZMX=0.0
C
      IF(ZMX.NE.0.0)GO TO 310
      UIN=WORK(ZM,1)
      UDRIN=WORK(ZM,2)
      UOUT=SAVE1
      UDROUT=SAVE2
      GO TO 350
C
C       CALCULATE UOUT,UDROUT IF ZMX IS NOT EQUAL TO ZERO
C       ADJUST SMOUT IF ZMX IS NOT EQUAL TO ZERO
C
  310 WORK(ZM,1)=SAVE1
      WORK(ZM,2)=SAVE2
      GAMMA=DSQRT(DABS(CI(ZM)-Q))
      SS=DBLE(ZMX)
      RH=RHO(0)
      IF(ZM.GT.NPT)RH=RHO(ZM-NPT)
      AI=WORK(ZM,2)/GAMMA
      BI=WORK(ZM,1)
      GSS=GAMMA*SS
      S=DSIN(GSS)
      C=DCOS(GSS)
      UOUT=AI*S+BI*C
      UDROUT=GAMMA*(AI*C-BI*S)
C       IF(ZM.GT.NPT.AND.SS.GE.ZI(ZM+1)-ZI(ZM))UDROUT=UDROUT*RHO(ZM-NPT
C       2+1)/RHO(ZM-NPT)
      SMOUT=SMOUT+SS/2.0D0/RH*((AI*AI+BI*BI)+S*C*(BI*BI-AI*AI)/GSS+
     22.0D0*AI*BI*S*S/GSS)
C
C       CALCULATE UIN,UDRIN IF ZMX IS NOT EQUAL TO ZERO
C       ADJUST SMIN IF ZMX IS NOT EQUAL TO ZERO
C
      SS=ZI(ZM+1)-ZI(ZM)-SS
      IF(SS.GT.0.0D0)GO TO 320
      UIN=WORK(ZM+1,1)
      UDRIN = WORK(ZM+1,2)
      IF (ZM.GE.NPT) UDRIN=UDRIN *RHO(ZM-NPT)/RHO(ZM-NPT+1)
      SMIN = SMIN - STERM
      GO TO 330
  320 RHPREV=RHO(0)
      IF(ZM+1.GT.NPT)RHPREV=RHO(ZM+1-NPT)
      GSS=GAMMA*SS
      C=DCOS(GSS)
      S=DSIN(GSS)
      AI=WORK(ZM+1,1)*S+WORK(ZM+1,2)*RH/RHPREV*C/GAMMA
      BI=WORK(ZM+1,1)*C-WORK(ZM+1,2)*RH/RHPREV*S/GAMMA
      UIN=BI
      UDRIN=AI*GAMMA
      SMIN=SMIN-SS/2.0D0/RH*((AI*AI+BI*BI)+S*C*(BI*BI-AI*AI)/GSS+
     22.0D0*AI*BI*S*S/GSS)
C
C       COUNT THE NUMBER OF ZERO CROSSINGS
C
C       COUNT THE NUMBER OF ZERO CROSSINGS IN LAYER ZM IF ZMX IS NOT
C        EQUAL TO ZERO
C
  330 GAM=SQRT(ABS(SNGL(CI(ZM)-Q)))
      A=WORK(ZM,1)
      B=UOUT
      SSS=ZMX
      ICHS=0
      IF(A.GT.0.0D0.AND.B.LT.0.0D0.OR.B.GT.0.0D0.AND.A.LT.0.0D0)
     2ICHS=1
      IZX=GAM*SSS/PI
      IF((IZX/2)*2.EQ.IZX.AND.ICHS.EQ.1.OR.(IZX/2)*2.NE.IZX.AND.
     2ICHS.EQ.0)IZX=IZX+1
      NZC=NZC+IZX
      A=UIN
      B=WORK(ZM+1,1)
      SSS=SNGL(ZI(ZM+1)-ZI(ZM))-ZMX
      IF(SSS.LE.0.0D0)GO TO 350
      ICHS=0
      IF(A.GT.0.0D0.AND.B.LT.0.0D0.OR.B.GT.0.0D0.AND.A.LT.0.0D0)
     2ICHS=1
      IZX=GAM*SSS/PI
      IF((IZX/2)*2.EQ.IZX.AND.ICHS.EQ.1.OR.(IZX/2)*2.NE.IZX.AND.
     2ICHS.EQ.0)IZX=IZX+1
      NZC=NZC+IZX
C
C       COUNT THE NUMBER OF ZERO CROSSINGS IN LAYER ZM IF ZMX IS EQUAL
C        TO ZERO AND IN ALL OTHER LAYERS DOWN TO THE POINT AT WHICH
C        THE INWARDS INTEGRATION STARTED
C
  350 DO 400 I=ISTART,ZB-1
      SSS=SNGL(ZI(I+1)-ZI(I))
      GAM2=SNGL(CI(I)-Q)
      GAM=SQRT(ABS(GAM2))
      A=WORK(I+1,1)
      B=WORK(I,1)
C
C       IF A OR B IS ZERO SET IT TO + OR - 1 DEPENDING ON THE SIGN
C        OF THE DERIVATIVE AT THAT POINT
C
      IF(A.NE.0.0D0)GO TO 360
      A=1.0D0
      IF(WORK(I+1,2).LT.0.0D0)A=-A
  360 IF(B.NE.0.0D0)GO TO 370
      B=1.0D0
      IF(WORK(I,2).LT.0.0D0)B=-B
C
C       CHECK FOR A CHANGE IN THE SIGN OF THE EIGENFUNCTION BETWEEN
C        THE TOP & BOTTOM OF THE LAYER
C
  370 ICHS=0
      IF(A.GT.0.0D0.AND.B.LT.0.0D0.OR.B.GT.0.0D0.AND.A.LT.0.0D0)ICHS=1
C
C       FIND THE NUMBER OF ZERO CROSSINGS IF IN AN EXPONENTIAL REGION
C        OR A LINEAR REGION
C
      IF(GAM2.GT.TOLGAM)GO TO 390
      IF(ICHS.EQ.1)NZC=NZC+1
      GO TO 400
C
C       FIND THE NUMBER OF ZERO CROSSINGS IF IN AN OSCILLATORY REGION
C
  390 IZX=GAM*SSS/PI
      IF((IZX/2)*2.EQ.IZX.AND.ICHS.EQ.1.OR.(IZX/2)*2.NE.IZX.AND.
     2ICHS.EQ.0)IZX=IZX+1
      NZC=NZC+IZX
  400 CONTINUE
      RETURN
      END
