        SUBROUTINE ITPDAT(ZP,CP,NWL,H,FREQ,HBOT,CBOT,
     2NBL,NL,NSR,NS,NR,ZS,ZR,ZI,CI,NPT,ZM,ISR,SR,IERR)
C
C  MODIFICATION TO BRIAN LEVERMAN'S PROGRAM TO MAKE OUTPUT CORRESPOND TO
C   BARTBERGER-ACKLER INTERPOLATION
C
C  MODIFIED     21-NOV-78
C  MODIFIED BY  DALE D ELLIS   DREA/AM  RM/250  EXT/155  DARTMOUTH N.S.
C
C  THE INTERPOLATION IS DONE IN SUBROUTINE LINEAR
C
      INTEGER I,IERR,ISR,J,K,LIM,NBL,NL,NPT,NR,NS,NSR,NUM,NWL
      REAL CBOT,CP,FREQ,H,HBOT,HL,ZP,ZR,ZRR,ZS,ZSS
      INTEGER ZM
      DIMENSION ZP(NWL),CP(NWL),HBOT(NBL),CBOT(NBL)
     2,ZS(NS),ZR(NR),ISR(25),SR(25),ZI(NL),CI(NL)
      DOUBLE PRECISION ZI,CI,CMIN,CMAX,OMEGA,SR,HDOUB,PI
 
      COMMON/DATA/OMEGA,CMIN,CMAX
      PARAMETER (PI=3.1415926535897932384626433832795D0)
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C          THIS SUBROUTINE DOES THE FOLLOWING:
C       -CALCULATES OMEGA,CMIN,CMAX
C       -INTERPOLATES THE INPUT VELOCITY PROFILE IN THE WATER
C         COLUMN TO THE DESIRED NUMBER OF PLACES
C       -NORMALIZES ALL VELOCITY & DEPTH ENTRIES
C       -ORGANIZES THE DENSITY ARRAY
C       -ASSIGNS ZM AS THE LAYER OF MINIMUM SOUND SPEED
C       -CREATES ISR(25),SR(25)
C
C       INPUT VARIABLES:
C         ZP(NWL),CP(NWL),NWL,H,FREQ,HBOT(NBL),CBOT(NBL),
C         NBL,NL,NSR,NS,NR,ZS(NS),ZR(NR)
C
C       OUTPUT VARIABLES:
C         ZI(NL),CI(NL),NPT,ISR(25),SR(25),ZM,
C          & (IN COMMON) OMEGA,CMIN,CMAX
C
C       NOTES:
C         LINEAR INTERPOLATION IS USED ON THE INPUT VELOCITY
C        PROFILE
C         THE ARRAYS ISR AND SR ARE DIMENSIONED TO 25 , AND WILL
C        CONTAIN INFORMATION ABOUT THE FIRST 25 SOURCE OR RECIEVERS
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       CALCULATE OMEGA & NPT
C
C
        OMEGA= 2.0D0 * PI * DBLE(FREQ)
C
      HDOUB=DBLE(H)
        NPT=NL-NBL
C
C          INTERPOLATE THE SOUND SPEED PROFILE A LA BARTBERGER-ACKLER
C
      CALL LINEAR(NWL,ZP,CP,NBL,HBOT,CBOT,H,OMEGA,NL,ZI,CI)
C
C       FIND THE MINIMUM VELOCITY IN THE PROFILE
C
      CMIN=0.0D0
      DO 400 I=1,NL
      IF(CI(I).LE.CMIN)GO TO 400
      CMIN=CI(I)
      ZM=I
  400 CONTINUE
      IF (ZM.EQ.1)  ZM=2
C
C       CALCULATE C-INFINITY(=CMAX)
C       CHECK THAT CMAX IS LESS THAN CMIN
C
      CMAX=CI(NL)
      IF(CMAX.GE.CMIN)CALL ERROR(24,IERR,SNGL(CMAX),SNGL(CMIN),0.0)
      IF(IERR.EQ.1)RETURN
C
C       FIND THE LAYER CONTAINING EACH SOURCE AND RECIEVER DEPTH
C       FIND THE POSITION OF THE SOURCE OR RECIEVER DEPTH IN THE LAYER
C        FOR ALL SOURCES AND RECIEVERS OR THE FIRST 25
C
C       FOR THE SOURCES
C
      HL=H/FLOAT(NPT)
      NUM=MIN0(25,NS)
      IF(NS.EQ.0)GO TO 605
      DO 600 I=1,NUM
      IF(ZS(I).GT.H)GO TO 510
      ISR(I)=IFIX(ZS(I)/HL)+1
      SR(I)=DBLE(ZS(I))/HDOUB - ZI(ISR(I))
      GO TO 600
  510 ZSS=ZS(I)/H
      DO 550 J=NPT+1,NL-1
      IF(ZSS.GE.SNGL(ZI(J)).AND.ZSS.LT.SNGL(ZI(J+1)))GO TO 560
  550 CONTINUE
      J=NL
  560 ISR(I)=J
      SR(I)=DBLE(ZS(I))/HDOUB - ZI(J)
  600 CONTINUE
C
C       FOR THE RECIEVERS IF THE NUMBER OF SOURCES IS LESS THAN 25
C
      IF(NUM.EQ.25)RETURN
  605 LIM=MIN0(25,NSR)
      IF (NR.EQ.0)  GO TO 705
      DO 700 J=NUM+1,LIM
      I=J-NUM
      IF(ZR(I).GT.H)GO TO 610
      ISR(J)=IFIX(ZR(I)/HL)+1
      SR(J)=DBLE(ZR(I))/HDOUB - ZI(ISR(J))
      GO TO 700
  610 ZRR=ZR(I)/H
      DO 650 K=NPT+1,NL-1
      IF(ZRR.GE.SNGL(ZI(K)).AND.ZRR.LT.SNGL(ZI(K+1)))GO TO 660
  650 CONTINUE
      K=NL
  660 ISR(J)=K
      SR(J)=DBLE(ZR(I))/HDOUB -ZI(K)
  700 CONTINUE
C
  705 CONTINUE
C
C
      RETURN
      END
