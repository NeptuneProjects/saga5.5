      SUBROUTINE LAYER (UIZ,UIPZ,GAMSQ,TOL,XF,UIO,UIPO,UINT,IFLAG)
C
C  EVALUATES U ITS DERIVATIVE AND INTEGRAL TO X=XF, GIVEN THE INITIAL
C   VALUES OF U, DU/DX AND THE PHASE ARGUMENT GAMMA.
C
C  WRITTEN BY: DALE D ELLIS     DEFENCE RESEARCH ESTABLISHMENT ATLANTIC
C                               DARTMOUTH, NS
C  DATE WRITTEN: 12-FEB-79
C  LAST MODIFICATION: 19-FEB-79
C
C   UIZ         - U(X) AT X=0, I.E. INITIAL VALUE OF U(X)
C   UIPZ        - INITIAL VALUE OF DU/DX
C   GAMSQ       - PHASE ARGUMENT IN THE LAYER
C   TOL         - TOLERANCE FOR LINEAR FUNCTION IN LAYER
C   XF          - FINAL VALUE OF X
C   UIO         - U EVALUATED AT X=XF
C   UIOP        - DU/DX EVALUATED AT X=XF
C   UINT        - INTEGRAL OF U**2 FROM X=0 TO X=XF
C   IFLAG       - FLAG. (IF IFLAG=0, UINT IS NOT EVALUATED)
C
C
      INTEGER IFLAG
      real tol
c     double precision half
      DOUBLE PRECISION ZERO,ONE,TWO,THREE,GAMSQ,A,G,B,UIZ,
     1    SI,XF,CI,UIO,UIPO,UINT,E,UIPZ
c     DATA HALF/0.5D0/
      DATA ZERO/0.D0/, ONE/1.0D0/, TWO/2.0D0/, THREE/3.0D0/
C
      IF (DABS(GAMSQ).LT.TOL) GO TO 30
      IF (GAMSQ.LT.ZERO)  GO TO 20
C
C          U(X)=A*SIN(G*X) + B*COS(G*X)
      G=DSQRT(GAMSQ)
      B=UIZ
      A=UIPZ/G
      SI=DSIN(G*XF)
      CI=DCOS(G*XF)
      UIO=A*SI+B*CI
      UIPO=G*(A*CI-B*SI)
      IF (IFLAG.EQ.0)  RETURN
      UINT=XF/TWO* (A**2+B**2 + SI*CI/G/XF*(B**2-A**2)
     1 + TWO*A*B*SI**2/G/XF)
      RETURN
C
C          U(X)=A*EXP(G*X) + B*EXP(-G*X)
   20 G=DSQRT(-GAMSQ)
      A=(UIZ+UIPZ/G)/TWO
      B=(UIZ-UIPZ/G)/TWO
      E=DEXP(G*XF)
      UIO=A*E + B/E
      UIPO=G*(A*E-B/E)
      IF (IFLAG.EQ.0)  RETURN
      UINT=(A**2*(E**2-ONE)/TWO + B**2*(ONE-E**(-2))/TWO
     1        + TWO*A*B*G*XF) / G
      RETURN
C
C          U(X)= A + B*X
   30 A=UIZ
      B=UIPZ
      UIO=UIZ + XF*UIPZ
      UIPO=UIPZ
      IF (IFLAG.EQ.0) RETURN
      UINT= XF*(A**2 + XF*(A*B + XF*B**2/THREE) )
      RETURN
      END
