      SUBROUTINE DOPAR(ZI,CI,NL,H,NPT,ZM,RHO,NBL,IDOWN,NMODES,LOWER
     2,IUPPER,WORK,IERR)
      COMMON/PAR/VMIN,VMAX,NMIN,ITMAX,IEF
      COMMON/TOL/TOLK,TOLU,TOLGAM
      COMMON/DATA/OMEGA,CMIN,CMAX
      INTEGER Z1,Z2,ZA,ZB,ZM,NL,NBL
      INTEGER IBOUND,IDOWN,IEF,IERR,ITMAX,IUPPER,J,
     1    LOWER,NMODES,NMIN,NPT,NZC
      REAL DELOUT,H,TOLU,VMAX,VMIN,ZMX,TOLK,TOLGAM,RHO(0:NBL)
      DOUBLE PRECISION WORK,SMOUT,SMIN,UIN,UDRIN,UOUT,UDROUT,
     2    FACTOR,Q,DELQ,ZI,CI,CMIN,CMAX,OMEGA,V,AVMIN,
     2    AVMAX,HT,SUMA,SUMB
      DIMENSION ZI(NL),CI(NL),WORK(NL,2),V(2),IBOUND(2)
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C          THIS SUBROUTINE DOES THE FOLLOWING:
C       -DETERMINES THE NUMBER OF MODES TO BE CALCULATED BY
C        FINDING THE EIGENVALUE NUMBER OF THE FIRST AND LAST MODES
C        REQUESTED OR THE EIGENVALUE NUMBERS OF THE MODES AVAILABLE
C
C       INPUT VARIABLES:
C         ZI,CI,NL,NPT,ZM,RHO,NBL,IDOWN,H,NMODES
C         5-MAR-79   CALLING SEQUENCE MODIFIED: IUP REPLACED BY NMODES
C         NMODES - MAXIMUM NUMBER OF MODES TO BE CALCULATED
C
C       OUTPUT VARIABLES:
C         LOWER,IUPPER
C
C       NOTES:
C         THE NUMBER OF MODES TO BE CALCULATED DEPENDS ON VMIN & VMAX
C        AS WELL AS NMODES & NMIN
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       DETERMINE WHICH EIGENVALUES TO USE IN FINDING THE LIMITS
C        ON THE EIGENVALUE NUMBERS
C
      HT=DBLE(H)
      V(1)=CMAX
      V(2)=CMIN
      AVMIN=HT*HT*OMEGA*OMEGA/DBLE(VMIN*VMIN)
      AVMAX=HT*HT*OMEGA*OMEGA/DBLE(VMAX*VMAX)
      IF(AVMIN.GT.AVMAX)GO TO 50
      GO TO 100
  50  IF(AVMAX.GT.CMAX.AND.AVMAX.LT.CMIN)V(1)=AVMAX
      IF(AVMIN.LT.CMIN.AND.AVMIN.GT.CMAX)V(2)=AVMIN
C
C       CALCULATE THE EIGENVALUE NUMBER (THAT IS THE NUMBER OF ZERO
C        CROSSINGS) FOR THE EIGENVALUES CORRESPONDING TO THESE
C        VALUES IF NECESSARY
C
  100 DO 200 J=1,2
      Q=V(J)
      IF(Q.NE.CMIN.OR.J.NE.2)GO TO 150
      IBOUND(2)=1
      GO TO 200
  150 CALL TURNPT(-2,ZI,CI,NL,Q,Z1,Z2,ZM,IERR)
      IF(IERR.EQ.1)RETURN
      CALL INTPTS(ZI,CI,NL,Z1,Z2,Q,ZA,ZB,SUMA,SUMB,IERR)
      IF(IERR.EQ.1)RETURN
      CALL INTOUT(ZI,CI,NL,NPT,Q,ZM,ZA,Z1,RHO,NBL,SUMA,WORK,SMOUT,
     2NZC,DELOUT,IERR)
      IF(IERR.EQ.1)RETURN
      CALL INTIN(1,ZI,CI,NL,NPT,Q,ZM,ZB,Z2,RHO,NBL,SUMB,WORK,SMOUT,
     2DELOUT,NZC,ZMX,SMIN,UIN,UDRIN,UOUT,UDROUT,0,IERR)
      IF(IERR.EQ.1)RETURN
C
C       SET IBOUND(J) TO THE NUMBER OF ZERO CROSSINGS
C
      IBOUND(J)=NZC
      CALL NORMAL(UOUT,UDROUT,UIN,UDRIN,SMIN,SMOUT,RHO,NBL,ZM,NPT,
     2FACTOR,DELQ,IERR)
      IF(IERR.EQ.1)RETURN
C
C       ADJUST IBOUND(J) BY THE SIGN OF DELQ
C
      IF(DELQ.LT.0.0D0.AND.J.EQ.1)IBOUND(J)=IBOUND(J)-1
      IF(DELQ.GT.0.0D0.AND.J.EQ.2)IBOUND(J)=IBOUND(J)+1
  200 CONTINUE
C
C       ADJUST THE SMALLEST AND LARGEST ALLOWABLE EIGENVALUE NUMBERS AS
C        NECESSARY
C
      LOWER=MAX0( IBOUND(2),IDOWN )
      IUPPER=MIN0(IBOUND(1),LOWER+NMODES-1)
C
C       CHECK THAT A POSITIVE NON-ZERO NUMBER OF MODES
C        ARE TO BE CALCULATED0
C
      IF(IUPPER-LOWER.LT.0)CALL ERROR(25,IERR,FLOAT(IUPPER),FLOAT(
     2LOWER),0.0)
      RETURN
      END
