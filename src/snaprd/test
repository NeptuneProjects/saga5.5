cohrnt.f:      COMMON/NRNGD/HNEW,HOLD,RSTART,REND,SLNGTH,IND1
exchng.f:      COMMON/NRNGD/HNEW,HOLD,RSTART,REND,SLNGTH,IND1
exchng.f:      EKAVR(IM)=EKAVR(IM)+0.5*(EKNEW(IM)+EKOLD(IM))*(REND-RSTART)
exchng.f:      ALFAVR(IM)=ALFAVR(IM)+0.5*(ALFNEW(IM)+ALFOLD(IM))*(REND-RSTART)
exchng.f:      RSTART=REND
exchng.f:      REND=REND+SLNGTH
modfun.f:      COMMON /NRNGD/ HNEW, HOLD, RSTART, REND, SLNGTH, IND1
modfun.f:c      write(*,*)'HNEW, HOLD, RSTART, REND, SLNGTH, IND1'
modfun.f:c      write(*,*)HNEW, HOLD, RSTART, REND, SLNGTH, IND1
modfun.f:      HNP1= (HNEW-HOLD)*(RNG(NP1)-RSTART)/(REND-RSTART)+HOLD
modfun.f:      RNP1= (REND-RSTART)*(DEPTH-HOLD)/(HNEW-HOLD)+RSTART
modfun.f:      RNP2= (REND-RSTART)*(HNP2-HOLD)/(HNEW-HOLD)+RSTART
range.f:      COMMON/NRNGD/HNEW,HOLD,RSTART,REND,SLNGTH,IND1
range.f:      IF((ISECT.EQ.NSECT).OR.(REND.GE.SECD(2))) then
range.f:         IF(SECD(1) .GT. REND)   RETURN 1
range.f:         RMAX=REND
range.f~:      COMMON/NRNGD/HNEW,HOLD,RSTART,REND,SLNGTH,IND1
range.f~:      IF((ISECT.EQ.NSECT).OR.(REND.GE.SECD(2))) then
range.f~:        IF(SECD(1) .GT. REND)   RETURN 1
range.f~:        RMAX=REND
snaprd.f:      COMMON /NRNGD/ HNEW,HOLD,RSTART,REND,SLNGTH,IND1
snaprd.f:         REND=SLNGTH
snaprd.f~:      COMMON /NRNGD/ HNEW,HOLD,RSTART,REND,SLNGTH,IND1
snaprd.f~:      REND=SLNGTH
ssnap2.f:      COMMON /NRNGD/ HNEW,HOLD,RSTART,REND,SLNGTH,IND1
ssnap2.f~:      COMMON /NRNGD/ HNEW,HOLD,RSTART,REND,SLNGTH,IND1
tlran.f:      COMMON/NRNGD/HNEW,HOLD,RSTART,REND,SLNGTH,IND1
tlran.f:      DELTA=REND-RSTART
